# Generated by Django 2.1.7 on 2019-03-29 13:14

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('rateMyCourse', '0012_merge_20171108_0857'),
    ]

    operations = [
        migrations.CreateModel(
            name='CommentUserCourse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='CourseKeyWord',
            fields=[
                ('id', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='rateMyCourse.Course')),
                ('keyword1', models.CharField(max_length=10, null=True)),
                ('keyword2', models.CharField(max_length=10, null=True)),
                ('keyword3', models.CharField(max_length=10, null=True)),
                ('keyword4', models.CharField(max_length=10, null=True)),
                ('keyword5', models.CharField(max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CourseRate',
            fields=[
                ('id', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='rateMyCourse.Course')),
                ('score', models.FloatField(default=3.0)),
                ('homework', models.FloatField(default=3.0)),
                ('difficulty', models.FloatField(default=3.0)),
                ('knowledge', models.FloatField(default=3.0)),
                ('satisfaction', models.FloatField(default=3.0)),
                ('rateCount', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='CourseTeacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='SchoolCourse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.RemoveField(
            model_name='department',
            name='school',
        ),
        migrations.RemoveField(
            model_name='rate',
            name='course',
        ),
        migrations.RemoveField(
            model_name='rate',
            name='user',
        ),
        migrations.RenameField(
            model_name='comment',
            old_name='parentcomment',
            new_name='parentComment',
        ),
        migrations.RemoveField(
            model_name='comment',
            name='course',
        ),
        migrations.RemoveField(
            model_name='comment',
            name='term',
        ),
        migrations.RemoveField(
            model_name='comment',
            name='total_score',
        ),
        migrations.RemoveField(
            model_name='comment',
            name='user',
        ),
        migrations.RemoveField(
            model_name='course',
            name='coursetype',
        ),
        migrations.RemoveField(
            model_name='course',
            name='credit',
        ),
        migrations.RemoveField(
            model_name='course',
            name='department',
        ),
        migrations.RemoveField(
            model_name='course',
            name='number',
        ),
        migrations.RemoveField(
            model_name='course',
            name='teacher_set',
        ),
        migrations.RemoveField(
            model_name='teacher',
            name='department',
        ),
        migrations.RemoveField(
            model_name='user',
            name='mail',
        ),
        migrations.AddField(
            model_name='comment',
            name='difficulty',
            field=models.IntegerField(default=3),
        ),
        migrations.AddField(
            model_name='comment',
            name='homework',
            field=models.IntegerField(default=3),
        ),
        migrations.AddField(
            model_name='comment',
            name='img',
            field=models.URLField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='comment',
            name='isRoot',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='comment',
            name='knowledge',
            field=models.IntegerField(default=3),
        ),
        migrations.AddField(
            model_name='comment',
            name='satisfaction',
            field=models.IntegerField(default=3),
        ),
        migrations.AddField(
            model_name='course',
            name='status',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='course',
            name='type',
            field=models.CharField(max_length=10, null=True),
        ),
        migrations.AddField(
            model_name='school',
            name='status',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='teacher',
            name='img',
            field=models.URLField(null=True),
        ),
        migrations.AddField(
            model_name='teacher',
            name='status',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='user',
            name='departmentName',
            field=models.CharField(max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='img',
            field=models.URLField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='user',
            name='isTeacher',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='user',
            name='schoolName',
            field=models.CharField(max_length=30, null=True),
        ),
        migrations.AlterField(
            model_name='comment',
            name='id',
            field=models.UUIDField(editable=False, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='course',
            name='description',
            field=models.CharField(max_length=200, null=True),
        ),
        migrations.AlterField(
            model_name='course',
            name='id',
            field=models.UUIDField(editable=False, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='course',
            name='name',
            field=models.CharField(max_length=20),
        ),
        migrations.AlterField(
            model_name='course',
            name='website',
            field=models.URLField(null=True),
        ),
        migrations.AlterField(
            model_name='school',
            name='id',
            field=models.UUIDField(editable=False, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='school',
            name='name',
            field=models.CharField(max_length=30),
        ),
        migrations.AlterField(
            model_name='teacher',
            name='id',
            field=models.UUIDField(editable=False, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='teacher',
            name='name',
            field=models.CharField(max_length=10),
        ),
        migrations.AlterField(
            model_name='teacher',
            name='website',
            field=models.URLField(null=True),
        ),
        migrations.AlterField(
            model_name='user',
            name='id',
            field=models.UUIDField(primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='user',
            name='username',
            field=models.CharField(max_length=20, unique=True),
        ),
        migrations.DeleteModel(
            name='Department',
        ),
        migrations.DeleteModel(
            name='Rate',
        ),
        migrations.AddField(
            model_name='schoolcourse',
            name='courseId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rateMyCourse.Course'),
        ),
        migrations.AddField(
            model_name='schoolcourse',
            name='schoolId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rateMyCourse.School'),
        ),
        migrations.AddField(
            model_name='courseteacher',
            name='courseId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rateMyCourse.Course'),
        ),
        migrations.AddField(
            model_name='courseteacher',
            name='teacherId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rateMyCourse.Teacher'),
        ),
        migrations.AddField(
            model_name='commentusercourse',
            name='commentId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rateMyCourse.Comment'),
        ),
        migrations.AddField(
            model_name='commentusercourse',
            name='courseId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rateMyCourse.Course'),
        ),
        migrations.AddField(
            model_name='commentusercourse',
            name='userId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rateMyCourse.User'),
        ),
        migrations.AlterUniqueTogether(
            name='schoolcourse',
            unique_together={('schoolId', 'courseId')},
        ),
        migrations.AlterUniqueTogether(
            name='courseteacher',
            unique_together={('courseId', 'teacherId')},
        ),
        migrations.AlterUniqueTogether(
            name='commentusercourse',
            unique_together={('commentId', 'userId', 'courseId')},
        ),
    ]
